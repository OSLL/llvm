
test:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 18                	add    %bl,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 c1                	add    %al,%cl
 8048199:	cf                   	iret   
 804819a:	39 2c a0             	cmp    %ebp,(%eax,%eiz,4)
 804819d:	51                   	push   %ecx
 804819e:	d4 7a                	aam    $0x7a
 80481a0:	04 86                	add    $0x86,%al
 80481a2:	fb                   	sti    
 80481a3:	63 e8                	arpl   %bp,%ax
 80481a5:	b8 1a d3 df 91       	mov    $0x91dfd31a,%eax
 80481aa:	14 92                	adc    $0x92,%al

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	03 00                	add    (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 03                	add    %al,(%ebx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x108>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	01 00                	add    %eax,(%eax)
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	20 00                	and    %al,(%eax)
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	29 00                	sub    %eax,(%eax)
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	1a 00                	sbb    (%eax),%al
 80481fe:	00 00                	add    %al,(%eax)
 8048200:	ec                   	in     (%dx),%al
 8048201:	84 04 08             	test   %al,(%eax,%ecx,1)
 8048204:	04 00                	add    $0x0,%al
 8048206:	00 00                	add    %al,(%eax)
 8048208:	11 00                	adc    %eax,(%eax)
 804820a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804820c <.dynstr>:
 804820c:	00 5f 5f             	add    %bl,0x5f(%edi)
 804820f:	67 6d                	insl   (%dx),%es:(%di)
 8048211:	6f                   	outsl  %ds:(%esi),(%dx)
 8048212:	6e                   	outsb  %ds:(%esi),(%dx)
 8048213:	5f                   	pop    %edi
 8048214:	73 74                	jae    804828a <_init-0xa>
 8048216:	61                   	popa   
 8048217:	72 74                	jb     804828d <_init-0x7>
 8048219:	5f                   	pop    %edi
 804821a:	5f                   	pop    %edi
 804821b:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804821f:	63 2e                	arpl   %bp,(%esi)
 8048221:	73 6f                	jae    8048292 <_init-0x2>
 8048223:	2e 36 00 5f 49       	cs add %bl,%cs:%ss:0x49(%edi)
 8048228:	4f                   	dec    %edi
 8048229:	5f                   	pop    %edi
 804822a:	73 74                	jae    80482a0 <_init+0xc>
 804822c:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048233:	64 
 8048234:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048237:	6c                   	insb   (%dx),%es:(%edi)
 8048238:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 804823f:	72 74                	jb     80482b5 <_init+0x21>
 8048241:	5f                   	pop    %edi
 8048242:	6d                   	insl   (%dx),%es:(%edi)
 8048243:	61                   	popa   
 8048244:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%esi),%ebp
 804824b:	43                   	inc    %ebx
 804824c:	5f                   	pop    %edi
 804824d:	32 2e                	xor    (%esi),%ch
 804824f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048252 <.gnu.version>:
 8048252:	00 00                	add    %al,(%eax)
 8048254:	00 00                	add    %al,(%eax)
 8048256:	02 00                	add    (%eax),%al
 8048258:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

0804825c <.gnu.version_r>:
 804825c:	01 00                	add    %eax,(%eax)
 804825e:	01 00                	add    %eax,(%eax)
 8048260:	10 00                	adc    %al,(%eax)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	10 00                	adc    %al,(%eax)
 8048266:	00 00                	add    %al,(%eax)
 8048268:	00 00                	add    %al,(%eax)
 804826a:	00 00                	add    %al,(%eax)
 804826c:	10 69 69             	adc    %ch,0x69(%ecx)
 804826f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048274:	3b 00                	cmp    (%eax),%eax
 8048276:	00 00                	add    %al,(%eax)
 8048278:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804827c <.rel.dyn>:
 804827c:	f0 9f                	lock lahf 
 804827e:	04 08                	add    $0x8,%al
 8048280:	06                   	push   %es
 8048281:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048284 <.rel.plt>:
 8048284:	00 a0 04 08 07 01    	add    %ah,0x1070804(%eax)
 804828a:	00 00                	add    %al,(%eax)
 804828c:	04 a0                	add    $0xa0,%al
 804828e:	04 08                	add    $0x8,%al
 8048290:	07                   	pop    %es
 8048291:	02 00                	add    (%eax),%al
	...

Disassembly of section .init:

08048294 <_init>:
 8048294:	53                   	push   %ebx
 8048295:	83 ec 08             	sub    $0x8,%esp
 8048298:	e8 00 00 00 00       	call   804829d <_init+0x9>
 804829d:	5b                   	pop    %ebx
 804829e:	81 c3 57 1d 00 00    	add    $0x1d57,%ebx
 80482a4:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482aa:	85 c0                	test   %eax,%eax
 80482ac:	74 05                	je     80482b3 <_init+0x1f>
 80482ae:	e8 2d 00 00 00       	call   80482e0 <__gmon_start__@plt>
 80482b3:	e8 d8 00 00 00       	call   8048390 <frame_dummy>
 80482b8:	e8 e3 01 00 00       	call   80484a0 <__do_global_ctors_aux>
 80482bd:	83 c4 08             	add    $0x8,%esp
 80482c0:	5b                   	pop    %ebx
 80482c1:	c3                   	ret    

Disassembly of section .plt:

080482d0 <__gmon_start__@plt-0x10>:
 80482d0:	ff 35 f8 9f 04 08    	pushl  0x8049ff8
 80482d6:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482dc:	00 00                	add    %al,(%eax)
	...

080482e0 <__gmon_start__@plt>:
 80482e0:	ff 25 00 a0 04 08    	jmp    *0x804a000
 80482e6:	68 00 00 00 00       	push   $0x0
 80482eb:	e9 e0 ff ff ff       	jmp    80482d0 <_init+0x3c>

080482f0 <__libc_start_main@plt>:
 80482f0:	ff 25 04 a0 04 08    	jmp    *0x804a004
 80482f6:	68 08 00 00 00       	push   $0x8
 80482fb:	e9 d0 ff ff ff       	jmp    80482d0 <_init+0x3c>

Disassembly of section .text:

08048300 <_start>:
 8048300:	31 ed                	xor    %ebp,%ebp
 8048302:	5e                   	pop    %esi
 8048303:	89 e1                	mov    %esp,%ecx
 8048305:	83 e4 f0             	and    $0xfffffff0,%esp
 8048308:	50                   	push   %eax
 8048309:	54                   	push   %esp
 804830a:	52                   	push   %edx
 804830b:	68 90 84 04 08       	push   $0x8048490
 8048310:	68 20 84 04 08       	push   $0x8048420
 8048315:	51                   	push   %ecx
 8048316:	56                   	push   %esi
 8048317:	68 b4 83 04 08       	push   $0x80483b4
 804831c:	e8 cf ff ff ff       	call   80482f0 <__libc_start_main@plt>
 8048321:	f4                   	hlt    
 8048322:	90                   	nop
 8048323:	90                   	nop
 8048324:	90                   	nop
 8048325:	90                   	nop
 8048326:	90                   	nop
 8048327:	90                   	nop
 8048328:	90                   	nop
 8048329:	90                   	nop
 804832a:	90                   	nop
 804832b:	90                   	nop
 804832c:	90                   	nop
 804832d:	90                   	nop
 804832e:	90                   	nop
 804832f:	90                   	nop

08048330 <__do_global_dtors_aux>:
 8048330:	55                   	push   %ebp
 8048331:	89 e5                	mov    %esp,%ebp
 8048333:	53                   	push   %ebx
 8048334:	83 ec 04             	sub    $0x4,%esp
 8048337:	80 3d 10 a0 04 08 00 	cmpb   $0x0,0x804a010
 804833e:	75 3f                	jne    804837f <__do_global_dtors_aux+0x4f>
 8048340:	a1 14 a0 04 08       	mov    0x804a014,%eax
 8048345:	bb 20 9f 04 08       	mov    $0x8049f20,%ebx
 804834a:	81 eb 1c 9f 04 08    	sub    $0x8049f1c,%ebx
 8048350:	c1 fb 02             	sar    $0x2,%ebx
 8048353:	83 eb 01             	sub    $0x1,%ebx
 8048356:	39 d8                	cmp    %ebx,%eax
 8048358:	73 1e                	jae    8048378 <__do_global_dtors_aux+0x48>
 804835a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048360:	83 c0 01             	add    $0x1,%eax
 8048363:	a3 14 a0 04 08       	mov    %eax,0x804a014
 8048368:	ff 14 85 1c 9f 04 08 	call   *0x8049f1c(,%eax,4)
 804836f:	a1 14 a0 04 08       	mov    0x804a014,%eax
 8048374:	39 d8                	cmp    %ebx,%eax
 8048376:	72 e8                	jb     8048360 <__do_global_dtors_aux+0x30>
 8048378:	c6 05 10 a0 04 08 01 	movb   $0x1,0x804a010
 804837f:	83 c4 04             	add    $0x4,%esp
 8048382:	5b                   	pop    %ebx
 8048383:	5d                   	pop    %ebp
 8048384:	c3                   	ret    
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <frame_dummy>:
 8048390:	55                   	push   %ebp
 8048391:	89 e5                	mov    %esp,%ebp
 8048393:	83 ec 18             	sub    $0x18,%esp
 8048396:	a1 24 9f 04 08       	mov    0x8049f24,%eax
 804839b:	85 c0                	test   %eax,%eax
 804839d:	74 12                	je     80483b1 <frame_dummy+0x21>
 804839f:	b8 00 00 00 00       	mov    $0x0,%eax
 80483a4:	85 c0                	test   %eax,%eax
 80483a6:	74 09                	je     80483b1 <frame_dummy+0x21>
 80483a8:	c7 04 24 24 9f 04 08 	movl   $0x8049f24,(%esp)
 80483af:	ff d0                	call   *%eax
 80483b1:	c9                   	leave  
 80483b2:	c3                   	ret    
 80483b3:	90                   	nop

080483b4 <main>:
 80483b4:	55                   	push   %ebp
 80483b5:	89 e5                	mov    %esp,%ebp
 80483b7:	83 ec 10             	sub    $0x10,%esp
 80483ba:	c7 45 fc da 07 00 00 	movl   $0x7da,-0x4(%ebp)
 80483c1:	c7 45 f8 0a 00 00 00 	movl   $0xa,-0x8(%ebp)
 80483c8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80483cf:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80483d2:	8b 55 fc             	mov    -0x4(%ebp),%edx
 80483d5:	01 d0                	add    %edx,%eax
 80483d7:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80483da:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80483dd:	8b 55 fc             	mov    -0x4(%ebp),%edx
 80483e0:	89 d1                	mov    %edx,%ecx
 80483e2:	29 c1                	sub    %eax,%ecx
 80483e4:	89 c8                	mov    %ecx,%eax
 80483e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80483e9:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80483ec:	0f af 45 f8          	imul   -0x8(%ebp),%eax
 80483f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80483f3:	8b 45 fc             	mov    -0x4(%ebp),%eax
 80483f6:	89 c2                	mov    %eax,%edx
 80483f8:	c1 fa 1f             	sar    $0x1f,%edx
 80483fb:	f7 7d f8             	idivl  -0x8(%ebp)
 80483fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048401:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048404:	3b 45 f8             	cmp    -0x8(%ebp),%eax
 8048407:	7e 06                	jle    804840f <main+0x5b>
 8048409:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804840c:	89 45 f8             	mov    %eax,-0x8(%ebp)
 804840f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048414:	c9                   	leave  
 8048415:	c3                   	ret    
 8048416:	90                   	nop
 8048417:	90                   	nop
 8048418:	90                   	nop
 8048419:	90                   	nop
 804841a:	90                   	nop
 804841b:	90                   	nop
 804841c:	90                   	nop
 804841d:	90                   	nop
 804841e:	90                   	nop
 804841f:	90                   	nop

08048420 <__libc_csu_init>:
 8048420:	55                   	push   %ebp
 8048421:	57                   	push   %edi
 8048422:	56                   	push   %esi
 8048423:	53                   	push   %ebx
 8048424:	e8 69 00 00 00       	call   8048492 <__i686.get_pc_thunk.bx>
 8048429:	81 c3 cb 1b 00 00    	add    $0x1bcb,%ebx
 804842f:	83 ec 1c             	sub    $0x1c,%esp
 8048432:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048436:	8d bb 20 ff ff ff    	lea    -0xe0(%ebx),%edi
 804843c:	e8 53 fe ff ff       	call   8048294 <_init>
 8048441:	8d 83 20 ff ff ff    	lea    -0xe0(%ebx),%eax
 8048447:	29 c7                	sub    %eax,%edi
 8048449:	c1 ff 02             	sar    $0x2,%edi
 804844c:	85 ff                	test   %edi,%edi
 804844e:	74 29                	je     8048479 <__libc_csu_init+0x59>
 8048450:	31 f6                	xor    %esi,%esi
 8048452:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048458:	8b 44 24 38          	mov    0x38(%esp),%eax
 804845c:	89 2c 24             	mov    %ebp,(%esp)
 804845f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048463:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048467:	89 44 24 04          	mov    %eax,0x4(%esp)
 804846b:	ff 94 b3 20 ff ff ff 	call   *-0xe0(%ebx,%esi,4)
 8048472:	83 c6 01             	add    $0x1,%esi
 8048475:	39 fe                	cmp    %edi,%esi
 8048477:	75 df                	jne    8048458 <__libc_csu_init+0x38>
 8048479:	83 c4 1c             	add    $0x1c,%esp
 804847c:	5b                   	pop    %ebx
 804847d:	5e                   	pop    %esi
 804847e:	5f                   	pop    %edi
 804847f:	5d                   	pop    %ebp
 8048480:	c3                   	ret    
 8048481:	eb 0d                	jmp    8048490 <__libc_csu_fini>
 8048483:	90                   	nop
 8048484:	90                   	nop
 8048485:	90                   	nop
 8048486:	90                   	nop
 8048487:	90                   	nop
 8048488:	90                   	nop
 8048489:	90                   	nop
 804848a:	90                   	nop
 804848b:	90                   	nop
 804848c:	90                   	nop
 804848d:	90                   	nop
 804848e:	90                   	nop
 804848f:	90                   	nop

08048490 <__libc_csu_fini>:
 8048490:	f3 c3                	repz ret 

08048492 <__i686.get_pc_thunk.bx>:
 8048492:	8b 1c 24             	mov    (%esp),%ebx
 8048495:	c3                   	ret    
 8048496:	90                   	nop
 8048497:	90                   	nop
 8048498:	90                   	nop
 8048499:	90                   	nop
 804849a:	90                   	nop
 804849b:	90                   	nop
 804849c:	90                   	nop
 804849d:	90                   	nop
 804849e:	90                   	nop
 804849f:	90                   	nop

080484a0 <__do_global_ctors_aux>:
 80484a0:	55                   	push   %ebp
 80484a1:	89 e5                	mov    %esp,%ebp
 80484a3:	53                   	push   %ebx
 80484a4:	83 ec 04             	sub    $0x4,%esp
 80484a7:	a1 14 9f 04 08       	mov    0x8049f14,%eax
 80484ac:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484af:	74 13                	je     80484c4 <__do_global_ctors_aux+0x24>
 80484b1:	bb 14 9f 04 08       	mov    $0x8049f14,%ebx
 80484b6:	66 90                	xchg   %ax,%ax
 80484b8:	83 eb 04             	sub    $0x4,%ebx
 80484bb:	ff d0                	call   *%eax
 80484bd:	8b 03                	mov    (%ebx),%eax
 80484bf:	83 f8 ff             	cmp    $0xffffffff,%eax
 80484c2:	75 f4                	jne    80484b8 <__do_global_ctors_aux+0x18>
 80484c4:	83 c4 04             	add    $0x4,%esp
 80484c7:	5b                   	pop    %ebx
 80484c8:	5d                   	pop    %ebp
 80484c9:	c3                   	ret    
 80484ca:	90                   	nop
 80484cb:	90                   	nop

Disassembly of section .fini:

080484cc <_fini>:
 80484cc:	53                   	push   %ebx
 80484cd:	83 ec 08             	sub    $0x8,%esp
 80484d0:	e8 00 00 00 00       	call   80484d5 <_fini+0x9>
 80484d5:	5b                   	pop    %ebx
 80484d6:	81 c3 1f 1b 00 00    	add    $0x1b1f,%ebx
 80484dc:	e8 4f fe ff ff       	call   8048330 <__do_global_dtors_aux>
 80484e1:	83 c4 08             	add    $0x8,%esp
 80484e4:	5b                   	pop    %ebx
 80484e5:	c3                   	ret    

Disassembly of section .rodata:

080484e8 <_fp_hw>:
 80484e8:	03 00                	add    (%eax),%eax
	...

080484ec <_IO_stdin_used>:
 80484ec:	01 00                	add    %eax,(%eax)
 80484ee:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

080484f0 <.eh_frame_hdr>:
 80484f0:	01 1b                	add    %ebx,(%ebx)
 80484f2:	03 3b                	add    (%ebx),%edi
 80484f4:	30 00                	xor    %al,(%eax)
 80484f6:	00 00                	add    %al,(%eax)
 80484f8:	05 00 00 00 e0       	add    $0xe0000000,%eax
 80484fd:	fd                   	std    
 80484fe:	ff                   	(bad)  
 80484ff:	ff 4c 00 00          	decl   0x0(%eax,%eax,1)
 8048503:	00 c4                	add    %al,%ah
 8048505:	fe                   	(bad)  
 8048506:	ff                   	(bad)  
 8048507:	ff 70 00             	pushl  0x0(%eax)
 804850a:	00 00                	add    %al,(%eax)
 804850c:	30 ff                	xor    %bh,%bh
 804850e:	ff                   	(bad)  
 804850f:	ff 90 00 00 00 a0    	call   *-0x60000000(%eax)
 8048515:	ff                   	(bad)  
 8048516:	ff                   	(bad)  
 8048517:	ff cc                	dec    %esp
 8048519:	00 00                	add    %al,(%eax)
 804851b:	00 a2 ff ff ff e0    	add    %ah,-0x1f000001(%edx)
 8048521:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

08048524 <__FRAME_END__-0xc0>:
 8048524:	14 00                	adc    $0x0,%al
 8048526:	00 00                	add    %al,(%eax)
 8048528:	00 00                	add    %al,(%eax)
 804852a:	00 00                	add    %al,(%eax)
 804852c:	01 7a 52             	add    %edi,0x52(%edx)
 804852f:	00 01                	add    %al,(%ecx)
 8048531:	7c 08                	jl     804853b <_IO_stdin_used+0x4f>
 8048533:	01 1b                	add    %ebx,(%ebx)
 8048535:	0c 04                	or     $0x4,%al
 8048537:	04 88                	add    $0x88,%al
 8048539:	01 00                	add    %eax,(%eax)
 804853b:	00 20                	add    %ah,(%eax)
 804853d:	00 00                	add    %al,(%eax)
 804853f:	00 1c 00             	add    %bl,(%eax,%eax,1)
 8048542:	00 00                	add    %al,(%eax)
 8048544:	8c fd                	mov    %?,%ebp
 8048546:	ff                   	(bad)  
 8048547:	ff 30                	pushl  (%eax)
 8048549:	00 00                	add    %al,(%eax)
 804854b:	00 00                	add    %al,(%eax)
 804854d:	0e                   	push   %cs
 804854e:	08 46 0e             	or     %al,0xe(%esi)
 8048551:	0c 4a                	or     $0x4a,%al
 8048553:	0f 0b                	ud2    
 8048555:	74 04                	je     804855b <_IO_stdin_used+0x6f>
 8048557:	78 00                	js     8048559 <_IO_stdin_used+0x6d>
 8048559:	3f                   	aas    
 804855a:	1a 3b                	sbb    (%ebx),%bh
 804855c:	2a 32                	sub    (%edx),%dh
 804855e:	24 22                	and    $0x22,%al
 8048560:	1c 00                	sbb    $0x0,%al
 8048562:	00 00                	add    %al,(%eax)
 8048564:	40                   	inc    %eax
 8048565:	00 00                	add    %al,(%eax)
 8048567:	00 4c fe ff          	add    %cl,-0x1(%esi,%edi,8)
 804856b:	ff 62 00             	jmp    *0x0(%edx)
 804856e:	00 00                	add    %al,(%eax)
 8048570:	00 41 0e             	add    %al,0xe(%ecx)
 8048573:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048579:	02 5e c5             	add    -0x3b(%esi),%bl
 804857c:	0c 04                	or     $0x4,%al
 804857e:	04 00                	add    $0x0,%al
 8048580:	38 00                	cmp    %al,(%eax)
 8048582:	00 00                	add    %al,(%eax)
 8048584:	60                   	pusha  
 8048585:	00 00                	add    %al,(%eax)
 8048587:	00 98 fe ff ff 61    	add    %bl,0x61fffffe(%eax)
 804858d:	00 00                	add    %al,(%eax)
 804858f:	00 00                	add    %al,(%eax)
 8048591:	41                   	inc    %ecx
 8048592:	0e                   	push   %cs
 8048593:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048599:	87 03                	xchg   %eax,(%ebx)
 804859b:	41                   	inc    %ecx
 804859c:	0e                   	push   %cs
 804859d:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 80485a3:	83 05 4e 0e 30 02 4a 	addl   $0x4a,0x2300e4e
 80485aa:	0e                   	push   %cs
 80485ab:	14 41                	adc    $0x41,%al
 80485ad:	0e                   	push   %cs
 80485ae:	10 c3                	adc    %al,%bl
 80485b0:	41                   	inc    %ecx
 80485b1:	0e                   	push   %cs
 80485b2:	0c c6                	or     $0xc6,%al
 80485b4:	41                   	inc    %ecx
 80485b5:	0e                   	push   %cs
 80485b6:	08 c7                	or     %al,%bh
 80485b8:	41                   	inc    %ecx
 80485b9:	0e                   	push   %cs
 80485ba:	04 c5                	add    $0xc5,%al
 80485bc:	10 00                	adc    %al,(%eax)
 80485be:	00 00                	add    %al,(%eax)
 80485c0:	9c                   	pushf  
 80485c1:	00 00                	add    %al,(%eax)
 80485c3:	00 cc                	add    %cl,%ah
 80485c5:	fe                   	(bad)  
 80485c6:	ff                   	(bad)  
 80485c7:	ff 02                	incl   (%edx)
 80485c9:	00 00                	add    %al,(%eax)
 80485cb:	00 00                	add    %al,(%eax)
 80485cd:	00 00                	add    %al,(%eax)
 80485cf:	00 10                	add    %dl,(%eax)
 80485d1:	00 00                	add    %al,(%eax)
 80485d3:	00 b0 00 00 00 ba    	add    %dh,-0x46000000(%eax)
 80485d9:	fe                   	(bad)  
 80485da:	ff                   	(bad)  
 80485db:	ff 04 00             	incl   (%eax,%eax,1)
 80485de:	00 00                	add    %al,(%eax)
 80485e0:	00 00                	add    %al,(%eax)
	...

080485e4 <__FRAME_END__>:
 80485e4:	00 00                	add    %al,(%eax)
	...

Disassembly of section .ctors:

08049f14 <__CTOR_LIST__>:
 8049f14:	ff                   	(bad)  
 8049f15:	ff                   	(bad)  
 8049f16:	ff                   	(bad)  
 8049f17:	ff 00                	incl   (%eax)

08049f18 <__CTOR_END__>:
 8049f18:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dtors:

08049f1c <__DTOR_LIST__>:
 8049f1c:	ff                   	(bad)  
 8049f1d:	ff                   	(bad)  
 8049f1e:	ff                   	(bad)  
 8049f1f:	ff 00                	incl   (%eax)

08049f20 <__DTOR_END__>:
 8049f20:	00 00                	add    %al,(%eax)
	...

Disassembly of section .jcr:

08049f24 <__JCR_END__>:
 8049f24:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f28 <_DYNAMIC>:
 8049f28:	01 00                	add    %eax,(%eax)
 8049f2a:	00 00                	add    %al,(%eax)
 8049f2c:	10 00                	adc    %al,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	0c 00                	or     $0x0,%al
 8049f32:	00 00                	add    %al,(%eax)
 8049f34:	94                   	xchg   %eax,%esp
 8049f35:	82                   	(bad)  
 8049f36:	04 08                	add    $0x8,%al
 8049f38:	0d 00 00 00 cc       	or     $0xcc000000,%eax
 8049f3d:	84 04 08             	test   %al,(%eax,%ecx,1)
 8049f40:	f5                   	cmc    
 8049f41:	fe                   	(bad)  
 8049f42:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f45:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f4c:	0c 82                	or     $0x82,%al
 8049f4e:	04 08                	add    $0x8,%al
 8049f50:	06                   	push   %es
 8049f51:	00 00                	add    %al,(%eax)
 8049f53:	00 cc                	add    %cl,%ah
 8049f55:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f5c:	45                   	inc    %ebp
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 0b                	add    %cl,(%ebx)
 8049f61:	00 00                	add    %al,(%eax)
 8049f63:	00 10                	add    %dl,(%eax)
 8049f65:	00 00                	add    %al,(%eax)
 8049f67:	00 15 00 00 00 00    	add    %dl,0x0
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 03                	add    %al,(%ebx)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 f4                	add    %dh,%ah
 8049f75:	9f                   	lahf   
 8049f76:	04 08                	add    $0x8,%al
 8049f78:	02 00                	add    (%eax),%al
 8049f7a:	00 00                	add    %al,(%eax)
 8049f7c:	10 00                	adc    %al,(%eax)
 8049f7e:	00 00                	add    %al,(%eax)
 8049f80:	14 00                	adc    $0x0,%al
 8049f82:	00 00                	add    %al,(%eax)
 8049f84:	11 00                	adc    %eax,(%eax)
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	17                   	pop    %ss
 8049f89:	00 00                	add    %al,(%eax)
 8049f8b:	00 84 82 04 08 11 00 	add    %al,0x110804(%edx,%eax,4)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	7c 82                	jl     8049f18 <__CTOR_END__>
 8049f96:	04 08                	add    $0x8,%al
 8049f98:	12 00                	adc    (%eax),%al
 8049f9a:	00 00                	add    %al,(%eax)
 8049f9c:	08 00                	or     %al,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	13 00                	adc    (%eax),%eax
 8049fa2:	00 00                	add    %al,(%eax)
 8049fa4:	08 00                	or     %al,(%eax)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	fe                   	(bad)  
 8049fa9:	ff                   	(bad)  
 8049faa:	ff 6f 5c             	ljmp   *0x5c(%edi)
 8049fad:	82                   	(bad)  
 8049fae:	04 08                	add    $0x8,%al
 8049fb0:	ff                   	(bad)  
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fb5:	00 00                	add    %al,(%eax)
 8049fb7:	00 f0                	add    %dh,%al
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 52             	ljmp   *0x52(%edi)
 8049fbd:	82                   	(bad)  
 8049fbe:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ff0 <.got>:
 8049ff0:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

08049ff4 <_GLOBAL_OFFSET_TABLE_>:
 8049ff4:	28 9f 04 08 00 00    	sub    %bl,0x804(%edi)
 8049ffa:	00 00                	add    %al,(%eax)
 8049ffc:	00 00                	add    %al,(%eax)
 8049ffe:	00 00                	add    %al,(%eax)
 804a000:	e6 82                	out    %al,$0x82
 804a002:	04 08                	add    $0x8,%al
 804a004:	f6                   	.byte 0xf6
 804a005:	82                   	(bad)  
 804a006:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a008 <__data_start>:
 804a008:	00 00                	add    %al,(%eax)
	...

0804a00c <__dso_handle>:
 804a00c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a010 <completed.6159>:
 804a010:	00 00                	add    %al,(%eax)
	...

0804a014 <dtor_idx.6161>:
 804a014:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x804821c>
   a:	74 75                	je     81 <_init-0x8048213>
   c:	2f                   	das    
   d:	4c                   	dec    %esp
   e:	69 6e 61 72 6f 20 34 	imul   $0x34206f72,0x61(%esi),%ebp
  15:	2e 36 2e 33 2d 31 75 	cs ss xor %cs:%ss:0x75627531,%ebp
  1c:	62 75 
  1e:	6e                   	outsb  %ds:(%esi),(%dx)
  1f:	74 75                	je     96 <_init-0x80481fe>
  21:	35 29 20 34 2e       	xor    $0x2e342029,%eax
  26:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    $0x0,%al
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	00 00                	add    %al,(%eax)
   8:	00 00                	add    %al,(%eax)
   a:	04 00                	add    $0x0,%al
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	b4 83                	mov    $0x83,%ah
  12:	04 08                	add    $0x8,%al
  14:	62 00                	bound  %eax,(%eax)
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	6c                   	insb   (%dx),%es:(%edi)
   1:	00 00                	add    %al,(%eax)
   3:	00 02                	add    %al,(%edx)
   5:	00 00                	add    %al,(%eax)
   7:	00 00                	add    %al,(%eax)
   9:	00 04 01             	add    %al,(%ecx,%eax,1)
   c:	00 00                	add    %al,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	01 1b                	add    %ebx,(%ebx)
  12:	00 00                	add    %al,(%eax)
  14:	00 b4 83 04 08 16 84 	add    %dh,-0x7be9f7fc(%ebx,%eax,4)
  1b:	04 08                	add    $0x8,%al
  1d:	00 00                	add    %al,(%eax)
  1f:	00 00                	add    %al,(%eax)
  21:	02 01                	add    (%ecx),%al
  23:	5d                   	pop    %ebp
  24:	00 00                	add    %al,(%eax)
  26:	00 01                	add    %al,(%ecx)
  28:	02 68 00             	add    0x0(%eax),%ch
  2b:	00 00                	add    %al,(%eax)
  2d:	b4 83                	mov    $0x83,%ah
  2f:	04 08                	add    $0x8,%al
  31:	16                   	push   %ss
  32:	84 04 08             	test   %al,(%eax,%ecx,1)
  35:	00 00                	add    %al,(%eax)
  37:	00 00                	add    %al,(%eax)
  39:	68 00 00 00 03       	push   $0x3000000
  3e:	0c 00                	or     $0x0,%al
  40:	00 00                	add    %al,(%eax)
  42:	01 04 68             	add    %eax,(%eax,%ebp,2)
  45:	00 00                	add    %al,(%eax)
  47:	00 02                	add    %al,(%edx)
  49:	91                   	xchg   %eax,%ecx
  4a:	74 03                	je     4f <_init-0x8048245>
  4c:	11 00                	adc    %eax,(%eax)
  4e:	00 00                	add    %al,(%eax)
  50:	01 05 68 00 00 00    	add    %eax,0x68
  56:	02 91 70 03 16 00    	add    0x160370(%ecx),%dl
  5c:	00 00                	add    %al,(%eax)
  5e:	01 06                	add    %eax,(%esi)
  60:	68 00 00 00 02       	push   $0x2000000
  65:	91                   	xchg   %eax,%ecx
  66:	6c                   	insb   (%dx),%es:(%edi)
  67:	00 04 04             	add    %al,(%esp,%eax,1)
  6a:	05 69 6e 74 00       	add    $0x746e69,%eax
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%ecx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e
   8:	0e                   	push   %cs
   9:	11 01                	adc    %eax,(%ecx)
   b:	12 01                	adc    (%ecx),%al
   d:	10 06                	adc    %al,(%esi)
   f:	00 00                	add    %al,(%eax)
  11:	02 2e                	add    (%esi),%ch
  13:	01 3f                	add    %edi,(%edi)
  15:	0c 03                	or     $0x3,%al
  17:	0e                   	push   %cs
  18:	3a 0b                	cmp    (%ebx),%cl
  1a:	3b 0b                	cmp    (%ebx),%ecx
  1c:	49                   	dec    %ecx
  1d:	13 11                	adc    (%ecx),%edx
  1f:	01 12                	add    %edx,(%edx)
  21:	01 40 06             	add    %eax,0x6(%eax)
  24:	01 13                	add    %edx,(%ebx)
  26:	00 00                	add    %al,(%eax)
  28:	03 34 00             	add    (%eax,%eax,1),%esi
  2b:	03 0e                	add    (%esi),%ecx
  2d:	3a 0b                	cmp    (%ebx),%cl
  2f:	3b 0b                	cmp    (%ebx),%ecx
  31:	49                   	dec    %ecx
  32:	13 02                	adc    (%edx),%eax
  34:	0a 00                	or     (%eax),%al
  36:	00 04 24             	add    %al,(%esp)
  39:	00 0b                	add    %cl,(%ebx)
  3b:	0b 3e                	or     (%esi),%edi
  3d:	0b 03                	or     (%ebx),%eax
  3f:	08 00                	or     %al,(%eax)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	76 00                	jbe    2 <_init-0x8048292>
   2:	00 00                	add    %al,(%eax)
   4:	02 00                	add    (%eax),%al
   6:	58                   	pop    %eax
   7:	00 00                	add    %al,(%eax)
   9:	00 01                	add    %al,(%ecx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	push   %cs
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%eax)
  15:	00 00                	add    %al,(%eax)
  17:	01 00                	add    %eax,(%eax)
  19:	00 01                	add    %al,(%ecx)
  1b:	2f                   	das    
  1c:	68 6f 6d 65 2f       	push   $0x2f656d6f
  21:	64 65 6e             	fs outsb %fs:%gs:(%esi),(%dx)
  24:	69 73 2f 43 6f 64 65 	imul   $0x65646f43,0x2f(%ebx),%esi
  2b:	5f                   	pop    %edi
  2c:	42                   	inc    %edx
  2d:	6c                   	insb   (%dx),%es:(%edi)
  2e:	6f                   	outsl  %ds:(%esi),(%dx)
  2f:	63 6b 73             	arpl   %bp,0x73(%ebx)
  32:	5f                   	pop    %edi
  33:	70 72                	jo     a7 <_init-0x80481ed>
  35:	6f                   	outsl  %ds:(%esi),(%dx)
  36:	6a 65                	push   $0x65
  38:	63 74 73 2f          	arpl   %si,0x2f(%ebx,%esi,2)
  3c:	73 69                	jae    a7 <_init-0x80481ed>
  3e:	6d                   	insl   (%dx),%es:(%edi)
  3f:	70 6c                	jo     ad <_init-0x80481e7>
  41:	65                   	gs
  42:	5f                   	pop    %edi
  43:	74 65                	je     aa <_init-0x80481ea>
  45:	73 74                	jae    bb <_init-0x80481d9>
  47:	5f                   	pop    %edi
  48:	66 6f                	outsw  %ds:(%esi),(%dx)
  4a:	72 5f                	jb     ab <_init-0x80481e9>
  4c:	63 72 6f             	arpl   %si,0x6f(%edx)
  4f:	73 73                	jae    c4 <_init-0x80481d0>
  51:	2d 67 63 63 00       	sub    $0x636367,%eax
  56:	00 6d 61             	add    %ch,0x61(%ebp)
  59:	69 6e 2e 63 00 01 00 	imul   $0x10063,0x2e(%esi),%ebp
  60:	00 00                	add    %al,(%eax)
  62:	00 05 02 b4 83 04    	add    %al,0x483b402
  68:	08 14 67             	or     %dl,(%edi,%eiz,2)
  6b:	75 75                	jne    e2 <_init-0x80481b2>
  6d:	76 ad                	jbe    1c <_init-0x8048278>
  6f:	e5 9f                	in     $0x9f,%eax
  71:	d8 84 69 59 02 02 00 	fadds  0x20259(%ecx,%ebp,2)
  78:	01 01                	add    %eax,(%ecx)

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	47                   	inc    %edi
   1:	4e                   	dec    %esi
   2:	55                   	push   %ebp
   3:	20 43 20             	and    %al,0x20(%ebx)
   6:	34 2e                	xor    $0x2e,%al
   8:	36 2e 33 00          	ss xor %cs:%ss:(%eax),%eax
   c:	76 61                	jbe    6f <_init-0x8048225>
   e:	72 31                	jb     41 <_init-0x8048253>
  10:	00 76 61             	add    %dh,0x61(%esi)
  13:	72 32                	jb     47 <_init-0x804824d>
  15:	00 76 61             	add    %dh,0x61(%esi)
  18:	72 33                	jb     4d <_init-0x8048247>
  1a:	00 2f                	add    %ch,(%edi)
  1c:	68 6f 6d 65 2f       	push   $0x2f656d6f
  21:	64 65 6e             	fs outsb %fs:%gs:(%esi),(%dx)
  24:	69 73 2f 43 6f 64 65 	imul   $0x65646f43,0x2f(%ebx),%esi
  2b:	5f                   	pop    %edi
  2c:	42                   	inc    %edx
  2d:	6c                   	insb   (%dx),%es:(%edi)
  2e:	6f                   	outsl  %ds:(%esi),(%dx)
  2f:	63 6b 73             	arpl   %bp,0x73(%ebx)
  32:	5f                   	pop    %edi
  33:	70 72                	jo     a7 <_init-0x80481ed>
  35:	6f                   	outsl  %ds:(%esi),(%dx)
  36:	6a 65                	push   $0x65
  38:	63 74 73 2f          	arpl   %si,0x2f(%ebx,%esi,2)
  3c:	73 69                	jae    a7 <_init-0x80481ed>
  3e:	6d                   	insl   (%dx),%es:(%edi)
  3f:	70 6c                	jo     ad <_init-0x80481e7>
  41:	65                   	gs
  42:	5f                   	pop    %edi
  43:	74 65                	je     aa <_init-0x80481ea>
  45:	73 74                	jae    bb <_init-0x80481d9>
  47:	5f                   	pop    %edi
  48:	66 6f                	outsw  %ds:(%esi),(%dx)
  4a:	72 5f                	jb     ab <_init-0x80481e9>
  4c:	63 72 6f             	arpl   %si,0x6f(%edx)
  4f:	73 73                	jae    c4 <_init-0x80481d0>
  51:	2d 67 63 63 2f       	sub    $0x2f636367,%eax
  56:	6d                   	insl   (%dx),%es:(%edi)
  57:	61                   	popa   
  58:	69 6e 2e 63 00 6d 61 	imul   $0x616d0063,0x2e(%esi),%ebp
  5f:	69                   	.byte 0x69
  60:	6e                   	outsb  %ds:(%esi),(%dx)
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00 00                	add    %al,(%eax)
   2:	00 00                	add    %al,(%eax)
   4:	01 00                	add    %eax,(%eax)
   6:	00 00                	add    %al,(%eax)
   8:	02 00                	add    (%eax),%al
   a:	74 04                	je     10 <_init-0x8048284>
   c:	01 00                	add    %eax,(%eax)
   e:	00 00                	add    %al,(%eax)
  10:	03 00                	add    (%eax),%eax
  12:	00 00                	add    %al,(%eax)
  14:	02 00                	add    (%eax),%al
  16:	74 08                	je     20 <_init-0x8048274>
  18:	03 00                	add    (%eax),%eax
  1a:	00 00                	add    %al,(%eax)
  1c:	61                   	popa   
  1d:	00 00                	add    %al,(%eax)
  1f:	00 02                	add    %al,(%edx)
  21:	00 75 08             	add    %dh,0x8(%ebp)
  24:	61                   	popa   
  25:	00 00                	add    %al,(%eax)
  27:	00 62 00             	add    %ah,0x0(%edx)
  2a:	00 00                	add    %al,(%eax)
  2c:	02 00                	add    (%eax),%al
  2e:	74 04                	je     34 <_init-0x8048260>
	...
